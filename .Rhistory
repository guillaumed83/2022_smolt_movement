plot(500,500,xlim=c(1,1695),ylim=c(1,687), type='n', main="", xlab="", ylab="",asp=1,axes=F, yaxs = "i")
# Get the plot information so the image will fill the plot box, and draw it
lim <- par()
rasterImage( channel_img ,
xleft=1, xright=1695,
ybottom=1, ytop=687)
## Plot the paths allowed in the model
temp_path <- list_coord_path
## Start with the drawing of the zones
coord_names_zone <- c(341,938,1300,1395,1500)
for(j in 1:length(coord_zone)){
polygon(x=coord_zone[[j]]$x,
y=coord_zone[[j]]$y,
col=rgb(t(col2rgb(col_rec[j+1])),alpha=150,maxColorValue = 255),
border=col_rec[j+1], #zone_col[j],
lwd=2
)
}
## plot the allowed paths
for( j in unique(temp_path$I_path)){
temp_path2 <- temp_path %>% filter(I_path==j)
points(temp_path2$x,temp_path2$y,type="l",col="tomato1",lty=2,lwd=4)
}
## Plot the receivers
for (j in 1:9){
points(coord_sum$x_coord[j],coord_sum$y_coord[j],pch=22,
bg = "white",
cex=3)
text(coord_sum$x_coord[j],coord_sum$y_coord[j], labels=coord_sum$number_rec[j],col="black",cex=1)
}
## plot the channel location
for (j in 1:length(coord_chan$x)){
points(coord_chan$x[j],coord_chan$y[j],pch=21,
bg = "khaki1",col=NA, cex =4 )
text(coord_chan$x[j],coord_chan$y[j], labels=coord_chan$numb[j],col="black",cex=1)
}
## Add the zone name
for(j in 1:length(coord_zone)){
text(coord_names_zone[j], y = 687-647,   labels = paste("Zone",j),col="white",cex=1.2)
}
## Moses
rasterImage( RST_rev_png,
xleft=1182, xright=1242,
ybottom=687-291, ytop=687-260)
## Butters
rasterImage( RST_rev_png,
xleft=1455, xright=1515,
ybottom=687-518, ytop=687-487)
text(40,650,"A",col="white",cex=4 )
## the last one is the current plot
plot.new()
vps <- viewport(width=unit(0.8, "npc"),height = unit(0.55, "npc"),y=0.25,x=0.55,mask="none") #baseViewports()
#pushViewport(vps$figure) ##   I am in the space of the network plot
# vp1 <-plotViewport(c(2,1,1,1)) ## create new vp with margins, you play with thess values
#print(graph_plot,vp = vps1)
print(graph_plot2 ,vp = vps)
text(0.045,1.09,"B",col="black",cex=4 )
dev.off()
##_________________________________________
library(readxl)
library(tidyverse)
library(baffle)
library(png)
library(ggplot2)
library(scales)
library(ggpubr)
library(gplots)
library(shape)
library(R2jags)
library(latex2exp)
## to have base plot and ggplots together
library(gridBase)
library(grid)
## alternative combine ggplot and base
library(cowplot)
library(gridGraphics)
library(sjmisc)
## Original Script written G.Dauphin in November 2024
## provided as supporting information for reproducibility purposes
## We empty the workspace because
## In case something was run in between
## Good practice would be to open the R project after the model has been run
rm(list=ls())
##_________________________________________
## We load the various objects we need for the various figures
## Figures 1, 4, 5, 6 -> model output
load("R_Data/data_inits_jags.Rdata")
load("R_Data/Jags_output.Rdata")
## Figures 2,3 -> receivers detections
load("R_Data/data_fig2-3.Rdata")
channel_img <- readPNG("R_Data/Google_Earth_2022_channels.png")
#### Coordinates receivers - upstream/downstream of islands coordinates guessed ####
## small map
coord_sum <- data.frame(
names_receivers = c("Rx1","R1a","R1b","R2a","Rx2b","Rx2a","R2b","R3a","R3b"),
# Receivers numbering manuscript
number_rec = c(3,4,5,6,7,8,9,10,11),
x_coord = c(130,412,548,1122,1254,1278,1443,1552,1550),
y_coord = 687 - c(424,255,412,260,490,451,518,393,486),
x_text = c(130,412,548,1122,1254,1338,1443,1552,1550),
y_text = 687 - c(374,205,462,210,540,434,568,343,536),
col_bg = c("lightskyblue","olivedrab3","hotpink1","olivedrab3","hotpink1","hotpink4","hotpink1","olivedrab3","hotpink1")
)
## Coordinates zones - a fish can only be in one of the channels in  a given zone
zone_col <-c("grey90","grey10","grey90","grey10","grey90")
col_rec<-c(col2hex("sienna"),
rgb(166,189,219,maxColorValue = 255),
rgb(116,169,207,maxColorValue = 255),
rgb(54,144,192,maxColorValue = 255),
rgb(5,112,179,maxColorValue = 255),
rgb(3,78,123,maxColorValue = 255)
)
coord_zone <- list(
data.frame(
x =  c(130,130,68,350,412,548,548)  ,
y = 687 - c(687,424,352.4265,183.4265,255,412,687) ),
data.frame(
x = c(350,412,548,548,1254,1254,1151,1122,    1110,888),
y = 687-c(183.4265,255,412,687,687,490,387,260, 207.4483   ,168) ),
data.frame(
x = c(1254,1342,1342,1328,1110,1122,1151,1254    ),
y = 687-c(687,687,394,306,207.4483,260,387, 490 ) ),
data.frame(
x = c(1328,1342,1342,1443,1443,1443),
y = 687-c(306,394,687,687,518,372) ),
data.frame(
x = c(1443,1443,1550,1550),
y = 687-c(372,687,687,368) )
)
## Quick calculation to get zone parallelograms
slope = (412-255)/(548-412)
intercept = 412-slope*548
slope*350+intercept
intercept2 = 424-slope*130
x2=130-(412-350)
slope*x2+intercept2
x2
slope = (260-387)/(1122-1151)
intercept = 260-slope*1122
slope*1110+intercept
coord_chan <- data.frame(
## Coordinates Channels
## Z1a, Z1b,
## Z2a, Z2ab, z2b,
## 23a, Z3_ab_dodge, Z3_ab_no_dodge, Z3_b
## Z4a, Z4ab, z4b,
## Z5a, Z5b
x = c(320,320,
1080,1125 ,1138, #
1270,1282,1254,1300,
1392,1373,1405,  #
1514,1515),
y = 687 - c(294,428,
255,382,457,   #
317,400,440,491,
400,477,518, #
399,484),
numb = c("1,1","1.2","2,1","2,2","2,3","3,1","3,2","3,3","3,4","4,1","4,2","4,3","5,1","5,2")
)
coord_path_1 <-data.frame(
x=c(41,181,417,658,875,1043,1253,1394,1450,1550,1660),
y=687 -
c(458,395,245,205,207,246,310,398,428,391,380),
I_col = rep(1,11),
I_path = rep(1,11)
)
coord_path_2 <-data.frame(
x=c(1450,1497,1529,1663),
y=687 -
c(428,469,485,484),
I_col = rep(1,4),
I_path = rep(2,4)
)
coord_path_3 <-data.frame(
x=c(181,432,681,940,1058,1334,1416,1481,1529),
y=687 -
c(395,434,414,413,435,496,522,504,486),
I_col = rep(1,9),
I_path = rep(3,9)
)
coord_path_4 <-data.frame(
x=c(1334,1390,1450),
y=687 -
c(496,474,428),
I_col = rep(1,3),
I_path = rep(4,3)
)
coord_path_5 <-data.frame(
x=c(1390,1497),
y=687 -
c(474,469),
I_col =rep(1,2),
I_path = rep(5,2)
)
coord_path_6 <-data.frame(
x=c(1043,1098,1140,1238,1329,1390),
y=687 -
c(246,353,385,424,469,474),
I_col =rep(2,6),
I_path = rep(6,6)
)
coord_path_7 <-data.frame(
x=c(1238,1300,1394),
y=687 -
c(424,392,398),
I_col =rep(3,3),
I_path = rep(7,3)
)
coord_path_8 <-data.frame(
x=c(940,1140),
y=687 -
c(413,385),
I_col =rep(4,2),
I_path = rep(8,2)
)
list_coord_path <- rbind(coord_path_1,coord_path_2,coord_path_3,coord_path_4,coord_path_5,coord_path_6,coord_path_7,
coord_path_8)
I_col <- c("lightblue2","steelblue1","royalblue3","royalblue3","deepskyblue2")
I_rec_col <-c(1,2,2,3,3,4,5,6,6)
channel_location_names <- c('Z1_a','Z1_b','Z2_a','Z2_ab'  ,'Z2_b','Z3_a','Z3_b','Z3_ab','Z4_a','Z4_b')
#### Loading png with a schematic of an RST
RST_png <- readPNG("R_data/smolt_wheel.png")
RST_rev_png <- readPNG("R_data/smolt_wheel_rev.png")
#### Need to run Network.R ####
## No judgment please it's a mess !
## Generates the schematic of the island network pathways
source("Scripts/Network.R")
##_________________________________________
graph_plot2 <- graph_plot +
annotation_raster(RST_rev_png , ymin = yy+0.8,ymax= yy+0.9565,xmin = 2.3,xmax = 2.6) +
annotation_raster(RST_rev_png , ymin = yy-1.2565,ymax= yy-1.1,xmin = 4.3,xmax = 4.6)
par(mfrow=c(2,1))
par( mar=c(0,0,4,0))
plot(500,500,xlim=c(1,1695),ylim=c(1,687), type='n', main="", xlab="", ylab="",asp=1,axes=F, yaxs = "i")
# Get the plot information so the image will fill the plot box, and draw it
lim <- par()
rasterImage( channel_img ,
xleft=1, xright=1695,
ybottom=1, ytop=687)
## Plot the paths allowed in the model
temp_path <- list_coord_path
## Start with the drawing of the zones
coord_names_zone <- c(341,938,1300,1395,1500)
for(j in 1:length(coord_zone)){
polygon(x=coord_zone[[j]]$x,
y=coord_zone[[j]]$y,
col=rgb(t(col2rgb(col_rec[j+1])),alpha=150,maxColorValue = 255),
border=col_rec[j+1], #zone_col[j],
lwd=2
)
}
## plot the allowed paths
for( j in unique(temp_path$I_path)){
temp_path2 <- temp_path %>% filter(I_path==j)
points(temp_path2$x,temp_path2$y,type="l",col="tomato1",lty=2,lwd=4)
}
## Plot the receivers
for (j in 1:9){
points(coord_sum$x_coord[j],coord_sum$y_coord[j],pch=22,
bg = "white",
cex=3)
text(coord_sum$x_coord[j],coord_sum$y_coord[j], labels=coord_sum$number_rec[j],col="black",cex=1)
}
## plot the channel location
for (j in 1:length(coord_chan$x)){
points(coord_chan$x[j],coord_chan$y[j],pch=21,
bg = "khaki1",col=NA, cex =4 )
text(coord_chan$x[j],coord_chan$y[j], labels=coord_chan$numb[j],col="black",cex=1)
}
## Add the zone name
for(j in 1:length(coord_zone)){
text(coord_names_zone[j], y = 687-647,   labels = paste("Zone",j),col="white",cex=1.2)
}
## Moses
rasterImage( RST_rev_png,
xleft=1182, xright=1242,
ybottom=687-291, ytop=687-260)
## Butters
rasterImage( RST_rev_png,
xleft=1455, xright=1515,
ybottom=687-518, ytop=687-487)
text(40,650,"A",col="white",cex=4 )
## the last one is the current plot
plot.new()
vps <- viewport(width=unit(0.8, "npc"),height = unit(0.55, "npc"),y=0.25,x=0.55,mask="none") #baseViewports()
print(graph_plot2 ,vp = vps)
text(0.045,1.09,"B",col="black",cex=4 )
dev.off()
par(mfrow=c(2,1))
par( mar=c(0,0,4,0))
plot(500,500,xlim=c(1,1695),ylim=c(1,687), type='n', main="", xlab="", ylab="",asp=1,axes=F, yaxs = "i")
# Get the plot information so the image will fill the plot box, and draw it
lim <- par()
rasterImage( channel_img ,
xleft=1, xright=1695,
ybottom=1, ytop=687)
## Plot the paths allowed in the model
temp_path <- list_coord_path
## Start with the drawing of the zones
coord_names_zone <- c(341,938,1300,1395,1500)
for(j in 1:length(coord_zone)){
polygon(x=coord_zone[[j]]$x,
y=coord_zone[[j]]$y,
col=rgb(t(col2rgb(col_rec[j+1])),alpha=150,maxColorValue = 255),
border=col_rec[j+1], #zone_col[j],
lwd=2
)
}
## plot the allowed paths
for( j in unique(temp_path$I_path)){
temp_path2 <- temp_path %>% filter(I_path==j)
points(temp_path2$x,temp_path2$y,type="l",col="tomato1",lty=2,lwd=4)
}
## Plot the receivers
for (j in 1:9){
points(coord_sum$x_coord[j],coord_sum$y_coord[j],pch=22,
bg = "white",
cex=3)
text(coord_sum$x_coord[j],coord_sum$y_coord[j], labels=coord_sum$number_rec[j],col="black",cex=1)
}
## plot the channel location
for (j in 1:length(coord_chan$x)){
points(coord_chan$x[j],coord_chan$y[j],pch=21,
bg = "khaki1",col=NA, cex =4 )
text(coord_chan$x[j],coord_chan$y[j], labels=coord_chan$numb[j],col="black",cex=1)
}
## Add the zone name
for(j in 1:length(coord_zone)){
text(coord_names_zone[j], y = 687-647,   labels = paste("Zone",j),col="white",cex=1.2)
}
## Moses
rasterImage( RST_rev_png,
xleft=1182, xright=1242,
ybottom=687-291, ytop=687-260)
## Butters
rasterImage( RST_rev_png,
xleft=1455, xright=1515,
ybottom=687-518, ytop=687-487)
text(40,650,"A",col="white",cex=4 )
## the last one is the current plot
plot.new()
vps <- viewport(width=unit(0.8, "npc"),height = unit(0.55, "npc"),y=0.25,x=0.55,mask="none") #baseViewports()
#pushViewport(vps$figure) ##   I am in the space of the network plot
# vp1 <-plotViewport(c(2,1,1,1)) ## create new vp with margins, you play with thess values
#print(graph_plot,vp = vps1)
print(graph_plot2 ,vp = vps)
text(0.045,1.09,"B",col="black",cex=4 )
?readPNG
library(jpeg)
##_________________________________________
### Figure 1 ####
#### Generating panel with Map with zones  ####
map_img  <-  readJPEG("R_Data/ReceiversArrays_29112024.jpg")
summary(map_img)
dim(map_img)
plot(500,500,xlim=c(1,2550),ylim=c(1,3300), type='n', main="", xlab="", ylab="",asp=1,axes=F, yaxs = "i")
lim <- par()
rasterImage( map_img ,
xleft=1, xright=2550,
ybottom=1, ytop=3300)
par(mfrow=c(3,1))
par( mar=c(0,0,4,0))
plot(500,500,xlim=c(1,3300),ylim=c(1,2550), type='n', main="", xlab="", ylab="",asp=1,axes=F, yaxs = "i")
lim <- par()
rasterImage( map_img ,
xleft=1, xright=3300,
ybottom=1, ytop=2250)
plot(500,500,xlim=c(1,1695),ylim=c(1,687), type='n', main="", xlab="", ylab="",asp=1,axes=F, yaxs = "i")
# Get the plot information so the image will fill the plot box, and draw it
lim <- par()
rasterImage( channel_img ,
xleft=1, xright=1695,
ybottom=1, ytop=687)
## Plot the paths allowed in the model
temp_path <- list_coord_path
## Start with the drawing of the zones
coord_names_zone <- c(341,938,1300,1395,1500)
#### Combining the photo of the site and the schematic version of the network ###
png("Figures/MS_map_exp2.png",width=1500,height=1300,pointsize=16,type="cairo-png") ## "cairo-png" for clean vectorized shapes
#pdf("Figures/MS_map_exp.pdf",width=7,height=6,pointsize=1)
#tiff("Figures/MS_map_exp.tif",width=1500,height=1300)
par(mfrow=c(3,1))
par( mar=c(0,0,4,0))
plot(500,500,xlim=c(1,3300),ylim=c(1,2550), type='n', main="", xlab="", ylab="",asp=1,axes=F, yaxs = "i")
lim <- par()
rasterImage( map_img ,
xleft=1, xright=3300,
ybottom=1, ytop=2250)
plot(500,500,xlim=c(1,1695),ylim=c(1,687), type='n', main="", xlab="", ylab="",asp=1,axes=F, yaxs = "i")
# Get the plot information so the image will fill the plot box, and draw it
lim <- par()
rasterImage( channel_img ,
xleft=1, xright=1695,
ybottom=1, ytop=687)
## Plot the paths allowed in the model
temp_path <- list_coord_path
## Start with the drawing of the zones
coord_names_zone <- c(341,938,1300,1395,1500)
for(j in 1:length(coord_zone)){
polygon(x=coord_zone[[j]]$x,
y=coord_zone[[j]]$y,
col=rgb(t(col2rgb(col_rec[j+1])),alpha=150,maxColorValue = 255),
border=col_rec[j+1], #zone_col[j],
lwd=2
)
}
## plot the allowed paths
for( j in unique(temp_path$I_path)){
temp_path2 <- temp_path %>% filter(I_path==j)
points(temp_path2$x,temp_path2$y,type="l",col="tomato1",lty=2,lwd=4)
}
## Plot the receivers
for (j in 1:9){
points(coord_sum$x_coord[j],coord_sum$y_coord[j],pch=22,
bg = "white",
cex=3)
text(coord_sum$x_coord[j],coord_sum$y_coord[j], labels=coord_sum$number_rec[j],col="black",cex=1)
}
## plot the channel location
for (j in 1:length(coord_chan$x)){
points(coord_chan$x[j],coord_chan$y[j],pch=21,
bg = "khaki1",col=NA, cex =4 )
text(coord_chan$x[j],coord_chan$y[j], labels=coord_chan$numb[j],col="black",cex=1)
}
## Add the zone name
for(j in 1:length(coord_zone)){
text(coord_names_zone[j], y = 687-647,   labels = paste("Zone",j),col="white",cex=1.2)
}
## Moses
rasterImage( RST_rev_png,
xleft=1182, xright=1242,
ybottom=687-291, ytop=687-260)
## Butters
rasterImage( RST_rev_png,
xleft=1455, xright=1515,
ybottom=687-518, ytop=687-487)
text(40,650,"A",col="white",cex=4 )
## the last one is the current plot
plot.new()
vps <- viewport(width=unit(0.8, "npc"),height = unit(0.55, "npc"),y=0.25,x=0.55,mask="none") #baseViewports()
#pushViewport(vps$figure) ##   I am in the space of the network plot
# vp1 <-plotViewport(c(2,1,1,1)) ## create new vp with margins, you play with thess values
#print(graph_plot,vp = vps1)
print(graph_plot2 ,vp = vps)
text(0.045,1.09,"B",col="black",cex=4 )
dev.off()
#### Combining the photo of the site and the schematic version of the network ###
png("Figures/MS_map_exp.png",width=1500,height=1300,pointsize=16,type="cairo-png") ## "cairo-png" for clean vectorized shapes
#pdf("Figures/MS_map_exp.pdf",width=7,height=6,pointsize=1)
#tiff("Figures/MS_map_exp.tif",width=1500,height=1300)
par(mfrow=c(2,1))
par( mar=c(0,0,4,0))
plot(500,500,xlim=c(1,1695),ylim=c(1,687), type='n', main="", xlab="", ylab="",asp=1,axes=F, yaxs = "i")
# Get the plot information so the image will fill the plot box, and draw it
lim <- par()
rasterImage( channel_img ,
xleft=1, xright=1695,
ybottom=1, ytop=687)
## Plot the paths allowed in the model
temp_path <- list_coord_path
## Start with the drawing of the zones
coord_names_zone <- c(341,938,1300,1395,1500)
for(j in 1:length(coord_zone)){
polygon(x=coord_zone[[j]]$x,
y=coord_zone[[j]]$y,
col=rgb(t(col2rgb(col_rec[j+1])),alpha=150,maxColorValue = 255),
border=col_rec[j+1], #zone_col[j],
lwd=2
)
}
## plot the allowed paths
for( j in unique(temp_path$I_path)){
temp_path2 <- temp_path %>% filter(I_path==j)
points(temp_path2$x,temp_path2$y,type="l",col="tomato1",lty=2,lwd=4)
}
## Plot the receivers
for (j in 1:9){
points(coord_sum$x_coord[j],coord_sum$y_coord[j],pch=22,
bg = "white",
cex=3)
text(coord_sum$x_coord[j],coord_sum$y_coord[j], labels=coord_sum$number_rec[j],col="black",cex=1)
}
## plot the channel location
for (j in 1:length(coord_chan$x)){
points(coord_chan$x[j],coord_chan$y[j],pch=21,
bg = "khaki1",col=NA, cex =4 )
text(coord_chan$x[j],coord_chan$y[j], labels=coord_chan$numb[j],col="black",cex=1)
}
## Add the zone name
for(j in 1:length(coord_zone)){
text(coord_names_zone[j], y = 687-647,   labels = paste("Zone",j),col="white",cex=1.2)
}
## Moses
rasterImage( RST_rev_png,
xleft=1182, xright=1242,
ybottom=687-291, ytop=687-260)
## Butters
rasterImage( RST_rev_png,
xleft=1455, xright=1515,
ybottom=687-518, ytop=687-487)
#text(40,650,"A",col="white",cex=4 )
## the last one is the current plot
plot.new()
vps <- viewport(width=unit(0.8, "npc"),height = unit(0.55, "npc"),y=0.25,x=0.55,mask="none") #baseViewports()
#pushViewport(vps$figure) ##   I am in the space of the network plot
# vp1 <-plotViewport(c(2,1,1,1)) ## create new vp with margins, you play with thess values
#print(graph_plot,vp = vps1)
print(graph_plot2 ,vp = vps)
#text(0.045,1.09,"B",col="black",cex=4 )
dev.off()
1695*2
687*2
